services:
  kernel.event_listener.raw_request_transformer:
    class: AppBundle\EventListener\RawRequestTransformerListener
    tags:
      - { name: kernel.event_listener, event: kernel.request, method: onKernelRequest, priority: 100 }

  repository.product:
    class: AppBundle\Repository\ProductRepository
    factory: ["@doctrine", getRepository]
    arguments: [AppBundle:Product]

  repository.category:
    class: AppBundle\Repository\CategoryRepository
    factory: ["@doctrine", getRepository]
    arguments: [AppBundle:Category]

  repository.country:
    class: AppBundle\Repository\CountryRepository
    factory: ["@doctrine", getRepository]
    arguments: [AppBundle:Country]

  repository.currency:
    class: AppBundle\Repository\CurrencyRepository
    factory: ["@doctrine", getRepository]
    arguments: [AppBundle:Currency]

  repository.product.property:
    class: AppBundle\Repository\ProductPropertyRepository
    factory: ["@doctrine", getRepository]
    arguments: [AppBundle:ProductProperty]

  repository.product.property.language:
    class: AppBundle\Repository\ProductPropertyLanguageRepository
    factory: ["@doctrine", getRepository]
    arguments: [AppBundle:ProductPropertyLanguage]

  repository.product.property.value:
    class: AppBundle\Repository\ProductPropertyValueRepository
    factory: ["@doctrine", getRepository]
    arguments: [AppBundle:ProductPropertyValue]

  repository.product.property.value.language:
    class: AppBundle\Repository\ProductPropertyValueLanguageRepository
    factory: ["@doctrine", getRepository]
    arguments: [AppBundle:ProductPropertyValueLanguage]

  repository.product.image:
    class: AppBundle\Repository\ProductImageRepository
    factory: ["@doctrine", getRepository]
    arguments: [AppBundle:ProductImage]

  repository.product.file:
    class: AppBundle\Repository\ProductFileRepository
    factory: ["@doctrine", getRepository]
    arguments: [AppBundle:ProductFile]

  repository.product.storage.group:
    class: AppBundle\Repository\ProductStorageGroupRepository
    factory: ["@doctrine", getRepository]
    arguments: [AppBundle:ProductStorageGroup]

  repository.product.storage.group.property:
    class: AppBundle\Repository\ProductStorageGroupPropertyRepository
    factory: ["@doctrine", getRepository]
    arguments: [AppBundle:ProductStorageGroupProperty]

  repository.image.size:
    class: AppBundle\Repository\ImageSizeRepository
    factory: ["@doctrine", getRepository]
    arguments: [AppBundle:ImageSize]

  repository.storage:
    class: AppBundle\Repository\StorageRepository
    factory: ["@doctrine", getRepository]
    arguments: [AppBundle:Storage]

  repository.storage.quantity:
    class: AppBundle\Repository\StorageQuantityRepository
    factory: ["@doctrine", getRepository]
    arguments: [AppBundle:StorageQuantity]

  manager.storage:
    class: AppBundle\Manager\StorageManager
    share: false
    arguments: ['@repository.storage', '@validator']

  manager.storage.quantity:
    class: AppBundle\Manager\StorageQuantityManager
    share: false
    arguments: ['@repository.storage.quantity', '@validator']


  manager.product:
    class: AppBundle\Manager\ProductManager
    share: false
    arguments: ['@repository.product', '@validator', '@manager.product.image', '@manager.product.file', '@manager.product.property']

  manager.product.property:
    class: AppBundle\Manager\ProductPropertyManager
    share: false
    arguments: ['@validator', '@repository.product.property', '@repository.product.property.language', '@repository.product.property.value', '@repository.product.property.value.language', '@repository.product.storage.group.property', '@repository.product.storage.group']

  manager.product.image:
    class: AppBundle\Manager\ProductImageManager
    share: false
    arguments: ['@repository.product.image', '@service.image.saver']

  manager.product.file:
    class: AppBundle\Manager\ProductFileManager
    share: false
    arguments: ['@service.file.saver', '@repository.product.file']

  manager.category:
    class: AppBundle\Manager\CategoryManager
    share: false
    arguments: ['@repository.category', '@validator']

  manager.country:
    class: AppBundle\Manager\CountryManager
    share: false
    arguments: ['@repository.country', '@validator']

  response.product:
    class: AppBundle\Services\ResponseService\Product
    arguments: ['@repository.product', '@repository.product.image']

  response.storage:
    class: AppBundle\Services\ResponseService\Storage
    arguments: ['@repository.storage']

  response.category:
    class: AppBundle\Services\ResponseService\Category
    arguments: ['@repository.category']

  response.country:
    class: AppBundle\Services\ResponseService\Country
    arguments: ['@repository.country']

  response.currency:
    class: AppBundle\Services\ResponseService\Currency
    arguments: ['@repository.currency']

  service.image.saver:
    class: AppBundle\Services\ImageSaver
    share: false
    arguments: ['%kernel.root_dir%', '@repository.image.size', '@filesystem', '@router']

  service.file.saver:
    class: AppBundle\Services\FileSaver
    share: false
    arguments: ['%kernel.root_dir%', '@filesystem', '@router']

  validator.sku:
    class: AppBundle\Validator\Validators\SKU
    arguments: ["@repository.product", '@repository.product.storage.group']
    tags:
      - { name: validator.constraint_validator, alias: sku }

  validator.unique-product-storage-group-combination:
    class: AppBundle\Validator\Validators\UniqueProductStorageGroupCombinationValidator
    arguments: ['@repository.product.storage.group.property']
    tags:
      - { name: validator.constraint_validator, alias: unique-product-storage-group-combination }

  entity.listener.storage:
    class: AppBundle\EventListener\Entity\Storage
    tags:
      - { name: doctrine.event_listener, event: postLoad }

